---
alwaysApply: true
description: "开发工作流程和代码生成"
---

# 开发工作流程

## 代码生成
项目使用多个代码生成工具：
- **Freezed** - 不可变类和联合类型
- **Riverpod** - 提供者生成
- **JSON Serialization** - 模型序列化

### 生成命令
```bash
flutter pub run build_runner build --delete-conflicting-outputs
```

## 开发流程
1. **TDD** - 先写测试，再写实现
2. **功能开发** - 按Clean Architecture组织代码
3. **代码生成** - 修改注解类后运行build_runner
4. **测试** - 运行单元测试、集成测试
5. **代码审查** - 检查代码约定和性能

## 调试工具
- 使用`log`而不是`print`进行调试
- 开发模式下可使用mock数据
- 参考[mock_api_client.dart](mdc:lib/core/network/mock_api_client.dart)

## 性能优化
- 使用const widget优化重建
- 实现列表视图优化（ListView.builder）
- 使用AssetImage加载静态图片
- cached_network_image加载远程图片

## 响应式设计
- 使用LayoutBuilder或MediaQuery
- 实现Material Design 3主题
- 支持深色模式

## 导航模式
- 使用GoRouter进行导航和深链接
- 路由配置在[router.dart](mdc:lib/app/router/router.dart)

## 国际化
- 中文简体为主要语言
- 错误信息和用户界面使用中文
- API交互保持英文